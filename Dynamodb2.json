{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "",
    "Metadata": {

    },
    "Parameters": {"vpccidr": {
        "Description": "For vpc Cidr Block",
        "Type": "String"
  },
  "pubcidr": {
      "Description": "For Pubblic Subnet",
      "Type": "String"
  },
  "Imageids": {
      "Description": "My App image",
      "Type": "String",
      "Default": "ami-053115247ac88ae5e"
  },
  "Pubsub2cidr": {
      "Description": "For public subet",
      "Type": "String"
  },
  "privatsubcidr": {
      "Description": " For Private Subnet",
      "Type": "String"
  },
  "instanceType": {
      "Description": "My instance types",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues" : ["t2.small","t2.small","t2.large","t2.micro"]

  },
  "keypair": {
      "Description": "For ssh",
      "Type": "AWS::EC2::KeyPair::KeyName"
  },
  "Prisub2cidr": {
      "Description": "For private subnet",
      "Type": "String"
  },
  "AZsa": {
      "Description": "Availability zones",
      "Type": "String"
    },
  "AZsb": {
      "Description": "Availability zones",
      "Type": "String"
  }
},
    "Mappings": {

    },
    "Conditions": {

    },
    "Resources": {
      "myvpc": {
        "Type": "AWS::EC2::VPC",
        "Properties": {
          "CidrBlock": { "Ref": "vpccidr" },
          "Tags": [{ "Key": "Name", "Value":  "myvpc" }]
        }
      },
      "InstanceSecurityGroup" : {
   "Type" : "AWS::EC2::SecurityGroup",
   "Properties" : {
      "GroupDescription" : "Allow http to client host",
      "VpcId" : {"Ref" : "myvpc"},
      "SecurityGroupIngress" : [{
         "IpProtocol" : "tcp",
         "FromPort" : 80,
         "ToPort" : 80,
         "CidrIp" : "0.0.0.0/0"
      }],
      "SecurityGroupEgress" : [{
         "IpProtocol" : "tcp",
         "FromPort" : 80,
         "ToPort" : 80,
         "CidrIp" : "0.0.0.0/0"
      }]
   }
},
"ALBSG" : {
  "Type" : "AWS::EC2::SecurityGroup",
  "Properties" : {
    "GroupDescription" : "-",
    "SecurityGroupIngress" : [{
      "IpProtocol" : "tcp",
      "FromPort" : 80,
      "ToPort" : 80,
      "FromPort" : 443,
      "ToPort" : 443,
      "CidrIp" : "0.0.0.0/0"
    }],
    "SecurityGroupEgress" : [{
       "IpProtocol" : "tcp",
       "FromPort" : 80,
       "ToPort" : 80,
       "FromPort" : 443,
       "ToPort" : 443,
       "CidrIp" : "0.0.0.0/0"
    }],
    "VpcId" : { "Ref": "myvpc" },
    "Tags" :  [ { "Key": "Name", "Value":  "ALBSG" } ]
  }
},
      "myvpcigw": {
        "Type": "AWS::EC2::InternetGateway",
        "Properties": {
          "Tags": [{ "Key": "Name", "Value":  "myvpcigw" }]
        }
      },
      "AttachGateway": {
        "Type": "AWS::EC2::VPCGatewayAttachment",
        "Properties": {
          "VpcId": { "Ref": "myvpc" },
          "InternetGatewayId": { "Ref": "myvpcigw" }
        }
      },

      "ApplicationLoadBalancer" : {
        "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
        "Properties" : {
          "Subnets" : [{ "Ref" :"pubsub"},
          { "Ref": "pubsub2" }],
          "SecurityGroups" : [ { "Ref" : "ALBSG" } ]

        }
      },

      "ALBListener" : {
        "Type" : "AWS::ElasticLoadBalancingV2::Listener",
        "Properties" : {
          "DefaultActions" : [{
            "Type" : "forward",
            "TargetGroupArn" : { "Ref" : "ALBTargetGroup" }
          }],
        "LoadBalancerArn" : { "Ref" : "ApplicationLoadBalancer" },
        "Port" : "80",
        "Protocol" : "HTTP"
        }
      },

      "ALBTargetGroup" : {
        "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
        "Properties" : {
          "HealthCheckIntervalSeconds" : 30,
          "HealthCheckTimeoutSeconds" : 5,
          "HealthyThresholdCount" : 3,
          "Port" : 80,
          "Protocol" : "HTTP",
          "UnhealthyThresholdCount" : 5,
          "VpcId" : {"Ref" : "myvpc"},
          "Targets" :
            [ { "Id" : { "Ref" : "Webserver001"}, "Port" : 80 },
              { "Id" : { "Ref" : "Webserver002"}, "Port" : 80 }
          ],
          "TargetGroupAttributes" :
            [ { "Key" : "stickiness.enabled", "Value" : "true" },
              { "Key" : "stickiness.type", "Value" : "lb_cookie" },
              { "Key" : "stickiness.lb_cookie.duration_seconds", "Value" : "180" }
          ]
          }
        },

    "pubsub": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "MapPublicIpOnLaunch" : "True",
        "AvailabilityZone": { "Ref": "AZsa" },
        "VpcId": { "Ref": "myvpc" },
        "CidrBlock": { "Ref": "pubcidr" },
        "Tags": [{ "Key": "Name", "Value":  "myvpc" }]
      }
    },
    "pubsub2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "MapPublicIpOnLaunch" : "True",
        "AvailabilityZone": { "Ref": "AZsb" },
        "VpcId": { "Ref": "myvpc" },
        "CidrBlock": { "Ref": "Pubsub2cidr" },
        "Tags": [{ "Key": "Name", "Value":  "pubsub2" }]
      }
    },
    "Webserver001": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
            "KeyName":
            { "Ref": "keypair" },
            "SecurityGroupIds": [
              {
                  "Ref": "InstanceSecurityGroup"
              }
          ],
            "ImageId":
            { "Ref": "Imageids" }
            ,
            "InstanceType":
            { "Ref": "instanceType" },
            "Monitoring": "false",
            "SubnetId":
            { "Ref": "pubsub" },

            "Tags": [
                {
                    "Key": "Name",
                    "Value": "WebServer001"
                }
            ]
          }
        },
        "Webserver002": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName":
                { "Ref": "keypair" },
                "SecurityGroupIds": [
                  {
                      "Ref": "InstanceSecurityGroup"
                  }
              ],
                "ImageId":
                { "Ref": "Imageids" }
                ,
                "InstanceType":
                { "Ref": "instanceType" },
                "Monitoring": "false",
                "SubnetId":
                { "Ref": "pubsub2" },

                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WebServer001"
                    }
                ]
              }
            },

    "privatsub": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": { "Ref": "AZsa" },
        "VpcId": { "Ref": "myvpc" },
        "CidrBlock": { "Ref": "privatsubcidr" },
        "Tags": [{ "Key": "Name", "Value":  "privatsub" }]
    }
  },

  "privatsub2": {
    "Type": "AWS::EC2::Subnet",
    "Properties": {
      "AvailabilityZone": { "Ref": "AZsb" },
      "VpcId": { "Ref": "myvpc" },
      "CidrBlock": { "Ref": "Prisub2cidr" },
      "Tags": [{ "Key": "Name", "Value":  "privatsub2" }]
    }
  },

    "pubrtb": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "myvpc" },
        "Tags": [{ "Key": "Name", "Value":  "pubrtb" }]
      }
    },
    "pubrt": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "pubrtb" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "myvpcigw" }

    }
  },
  "pubsub2ass": {
    "Type": "AWS::EC2::SubnetRouteTableAssociation",
    "Properties": {
      "SubnetId": { "Ref": "pubsub2" },
      "RouteTableId": { "Ref": "pubrtb" }
    }
  },
  "pubsubass": {
    "Type": "AWS::EC2::SubnetRouteTableAssociation",
    "Properties": {
      "SubnetId": { "Ref": "pubsub" },
      "RouteTableId": { "Ref": "pubrtb" }

      }
  }
},
    "Outputs": {

    }
}
